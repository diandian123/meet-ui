const range=function(t,e,s){return Math.min(Math.max(t,e),s)};Component({properties:{columnIndex:{type:Number,value:0},items:{type:Array,value:[]},current:{type:Number,value:0},visibleItems:{type:Number,value:5}},data:{startY:0,offset:0,duration:0,startOffset:0,currentIndex:0,itemHeight:0},observers:{items(t){this.data.itemHeight||0===t.length||this.getPickerInfo()},current(t){this.setIndex(t)}},lifetimes:{ready(){this.instantDistance="",this.lastClientY="";const e=this.data["current"];this.createSelectorQuery().select(".mt-picker__item").boundingClientRect(t=>{this._setData({itemHeight:t?.height,currentIndex:e}).then(()=>{this.setIndex(e)})}).exec()}},methods:{onTouchStart(t){this.setData({startY:t.touches[0].clientY,startOffset:this.data.offset,duration:0})},onTouchMove(t){var e=this["data"],s=t.touches[0].clientY-e.startY;this.instantDistance=(t.touches[0].clientY-this.lastClientY).toFixed(2),this.lastClientY=t.touches[0].clientY,this.setData({offset:range(e.startOffset+s,-(this.getCount()*e.itemHeight),e.itemHeight)})},onTouchEnd(){var e=this["data"];if(e.offset!==e.startOffset){this.setData({duration:200});let t=range(Math.round(-e.offset/e.itemHeight),0,this.getCount()-1);this.instantDistance<-4?t+=2:4<this.instantDistance&&(t-=2),this.setIndex(t,!0)}},handleClick(t){t=t.currentTarget.dataset.index;this.setIndex(t,!0)},setIndex(t,e){const s=this["data"];var i=-(t=this.adjustIndex(t)||0)*s.itemHeight;return t!==s.currentIndex?this._setData({offset:i,currentIndex:t}).then(()=>{e&&this.triggerEvent("change",{columnIndex:s.columnIndex,index:t,item:s.items[t]})}):this._setData({offset:i})},adjustIndex(e){var s=this["data"],i=this.getCount();for(let t=e=range(e,0,i);t<i;t++)if(!this.isDisabled(s.items[t]))return t;for(let t=e-1;0<=t;t--)if(!this.isDisabled(s.items[t]))return t},getCount(){return this.data.items.length},isDisabled(t){return t&&t.disabled},setValue({value:e}){var s=this.data["items"];for(let t=0;t<s.length;t++)if(s[t].value===e)return this.setIndex(t);return Promise.resolve()},getValue(){var t=this["data"];return{label:t.items[t.currentIndex].label,value:t.items[t.currentIndex].value}},_setData(t){return this.setData(t),new Promise(t=>wx.nextTick(t))},getPickerInfo(){this.createSelectorQuery().select(".mt-picker__item").boundingClientRect(t=>{this._setData({itemHeight:t?.height})}).exec()}}});